{"version":3,"file":"component---src-pages-blog-js-eabbd10689652dc1103f.js","mappings":"wMA4BMA,EAAOC,EAAAA,GAAAA,IAAAA,WAAH,0DAAGA,CAAH,0JAGM,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aAYjCC,EAASJ,EAAAA,GAAAA,IAAAA,WAAH,4DAAGA,CAAH,mCAKNK,EAAQL,EAAAA,GAAAA,IAAAA,WAAH,2DAAGA,CAAH,gCAEA,SAACC,GAAD,OAAWA,EAAMC,MAAMI,WAG5BC,EAAcP,EAAAA,GAAAA,IAAAA,WAAH,iEAAGA,CAAH,MAEXQ,EAAgBR,EAAAA,GAAAA,MAAAA,WAAH,mEAAGA,CAAH,oDAMnB,EAxDiB,SAAC,GAAiD,IAA/CS,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KACrD,OACE,gBAACb,EAAD,KACE,gBAAC,KAAD,CAAMc,GAAID,GACR,gBAACR,EAAD,KACE,gBAACC,EAAD,KAAQI,GACR,gBAACD,EAAD,KACG,IAAIM,KAAKH,GAAeI,uBAI7B,gBAACR,EAAD,KAAcG,MCVhBM,EAAW,SAAC,GAAc,IACxBC,EAqER,SAAsBC,GACpB,OAAOA,EAAKC,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACjCC,EAAOD,EAAPC,GACR,EAAqCD,EAAKE,YAG1C,MAAO,CACLD,GAAAA,EACAE,KALF,EAAQA,KAMNf,YANF,EAAcA,YAOZD,MAPF,EAA2BA,MAQzBG,KAPeU,EAAKI,OAAdd,SAzEIe,CADe,EAAXT,MAGlB,OACE,gBAACU,EAAA,EAAD,KACE,gBAACC,EAAD,KACE,gBAAC,EAAD,aACA,gBAACC,EAAD,KACGb,EAAMI,KAAI,gBAAGE,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMhB,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAAaE,EAAjC,EAAiCA,KAAjC,OACT,gBAACmB,EAAD,KACE,gBAAC,EAAD,CACEC,IAAKT,EACLd,MAAOA,EACPC,YAAaA,EACbC,cAAec,EACfb,KAAMA,YAUtB,aAAe,OACb,gBAAC,KAAD,CACEqB,MAAK,aAmBLC,OAAQ,SAAChB,GAAD,OAAU,gBAACF,EAAD,CAAUE,KAAMA,QAIhCb,EAAQL,EAAAA,GAAAA,GAAAA,WAAH,uDAAGA,CAAH,MAEL6B,EAAW7B,EAAAA,GAAAA,IAAAA,WAAH,0DAAGA,CAAH,kBAIR8B,EAAY9B,EAAAA,GAAAA,GAAAA,WAAH,2DAAGA,CAAH,0EAST+B,EAAW/B,EAAAA,GAAAA,GAAAA,WAAH,0DAAGA,CAAH","sources":["webpack://gatsby-netlify/./src/components/PostCard.js","webpack://gatsby-netlify/./src/pages/blog.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst PostCard = ({ title, description, publishedDate, slug }) => {\n  return (\n    <Card>\n      <Link to={slug}>\n        <Header>\n          <Title>{title}</Title>\n          <PublishedDate>\n            {new Date(publishedDate).toLocaleDateString()}\n          </PublishedDate>\n        </Header>\n\n        <Description>{description}</Description>\n      </Link>\n    </Card>\n  );\n};\n\nPostCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  publishedDate: PropTypes.string.isRequired,\n};\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${(props) => props.theme.secondary};\n  font-size: 1rem;\n  padding: 1em;\n\n  border-bottom: 4px solid darkgray;\n  border-radius: 10px;\n\n  & a {\n    color: inherit;\n  }\n`;\n\nconst Header = styled.div`\n  font-size: 1.5em;\n  display: flex;\n`;\n\nconst Title = styled.div`\n  font-weight: 600;\n  color: ${(props) => props.theme.primary};\n`;\n\nconst Description = styled.div``;\n\nconst PublishedDate = styled.small`\n  font-size: 0.5em;\n  margin-left: auto;\n  margin-top: 0;\n`;\n\nexport default PostCard;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../components/Layout\";\nimport PostCard from \"../components/PostCard\";\n\nconst BlogPage = ({ data }) => {\n  const posts = extractPosts(data);\n\n  return (\n    <Layout>\n      <BlogRoll>\n        <Title>Blog</Title>\n        <PostsList>\n          {posts.map(({ id, date, title, description, slug }) => (\n            <PostItem>\n              <PostCard\n                key={id}\n                title={title}\n                description={description}\n                publishedDate={date}\n                slug={slug}\n              />\n            </PostItem>\n          ))}\n        </PostsList>\n      </BlogRoll>\n    </Layout>\n  );\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query MyQuery {\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                date\n                description\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <BlogPage data={data} />}\n  />\n);\n\nconst Title = styled.h1``;\n\nconst BlogRoll = styled.div`\n  padding: 1em;\n`;\n\nconst PostsList = styled.ul`\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    column-count: 2;\n    column-gap: 1rem;\n  }\n`;\n\nconst PostItem = styled.li`\n  list-style-type: none;\n  break-inside: avoid;\n`;\n\nfunction extractPosts(data) {\n  return data.allMarkdownRemark.edges.map(({ node }) => {\n    const { id } = node;\n    const { date, description, title } = node.frontmatter;\n    const { slug } = node.fields;\n\n    return {\n      id,\n      date,\n      description,\n      title,\n      slug,\n    };\n  });\n}\n"],"names":["Card","styled","props","theme","secondary","Header","Title","primary","Description","PublishedDate","title","description","publishedDate","slug","to","Date","toLocaleDateString","BlogPage","posts","data","allMarkdownRemark","edges","map","node","id","frontmatter","date","fields","extractPosts","Layout","BlogRoll","PostsList","PostItem","key","query","render"],"sourceRoot":""}